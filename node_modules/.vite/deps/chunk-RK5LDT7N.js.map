{
  "version": 3,
  "sources": ["../../highlight.js/es/languages/lisp.js"],
  "sourcesContent": ["/*\nLanguage: Lisp\nDescription: Generic lisp syntax\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nCategory: lisp\n*/\n\nfunction lisp(hljs) {\n  const LISP_IDENT_RE = '[a-zA-Z_\\\\-+\\\\*\\\\/<=>&#][a-zA-Z0-9_\\\\-+*\\\\/<=>&#!]*';\n  const MEC_RE = '\\\\|[^]*?\\\\|';\n  const LISP_SIMPLE_NUMBER_RE = '(-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|-)?\\\\d+)?';\n  const LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin: LISP_SIMPLE_NUMBER_RE,\n        relevance: 0\n      },\n      { begin: '#(b|B)[0-1]+(/[0-1]+)?' },\n      { begin: '#(o|O)[0-7]+(/[0-7]+)?' },\n      { begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?' },\n      {\n        begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE,\n        end: '\\\\)'\n      }\n    ]\n  };\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n  const COMMENT = hljs.COMMENT(\n    ';', '$',\n    { relevance: 0 }\n  );\n  const VARIABLE = {\n    begin: '\\\\*',\n    end: '\\\\*'\n  };\n  const KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  const IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  const MEC = { begin: MEC_RE };\n  const QUOTED_LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: [\n      'self',\n      LITERAL,\n      STRING,\n      NUMBER,\n      IDENT\n    ]\n  };\n  const QUOTED = {\n    contains: [\n      NUMBER,\n      STRING,\n      VARIABLE,\n      KEYWORD,\n      QUOTED_LIST,\n      IDENT\n    ],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(',\n        end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ',\n        end: '\\\\)',\n        keywords: { name: 'quote' }\n      },\n      { begin: '\\'' + MEC_RE }\n    ]\n  };\n  const QUOTED_ATOM = { variants: [\n    { begin: '\\'' + LISP_IDENT_RE },\n    { begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*' }\n  ] };\n  const LIST = {\n    begin: '\\\\(\\\\s*',\n    end: '\\\\)'\n  };\n  const BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {\n          begin: LISP_IDENT_RE,\n          relevance: 0,\n        },\n        { begin: MEC_RE }\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [\n    QUOTED,\n    QUOTED_ATOM,\n    LIST,\n    LITERAL,\n    NUMBER,\n    STRING,\n    COMMENT,\n    VARIABLE,\n    KEYWORD,\n    MEC,\n    IDENT\n  ];\n\n  return {\n    name: 'Lisp',\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      hljs.SHEBANG(),\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n}\n\nexport { lisp as default };\n"],
  "mappings": ";AAOA,SAAS,KAAK,MAAM;AAClB,QAAM,gBAAgB;AACtB,QAAM,SAAS;AACf,QAAM,wBAAwB;AAC9B,QAAM,UAAU;AAAA,IACd,WAAW;AAAA,IACX,OAAO;AAAA,EACT;AACA,QAAM,SAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACb;AAAA,MACA,EAAE,OAAO,yBAAyB;AAAA,MAClC,EAAE,OAAO,yBAAyB;AAAA,MAClC,EAAE,OAAO,qCAAqC;AAAA,MAC9C;AAAA,QACE,OAAO,cAAc,wBAAwB,OAAO;AAAA,QACpD,KAAK;AAAA,MACP;AAAA,IACF;AAAA,EACF;AACA,QAAM,SAAS,KAAK,QAAQ,KAAK,mBAAmB,EAAE,SAAS,KAAK,CAAC;AACrE,QAAM,UAAU,KAAK;AAAA,IACnB;AAAA,IAAK;AAAA,IACL,EAAE,WAAW,EAAE;AAAA,EACjB;AACA,QAAM,WAAW;AAAA,IACf,OAAO;AAAA,IACP,KAAK;AAAA,EACP;AACA,QAAM,UAAU;AAAA,IACd,WAAW;AAAA,IACX,OAAO,SAAS;AAAA,EAClB;AACA,QAAM,QAAQ;AAAA,IACZ,OAAO;AAAA,IACP,WAAW;AAAA,EACb;AACA,QAAM,MAAM,EAAE,OAAO,OAAO;AAC5B,QAAM,cAAc;AAAA,IAClB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACA,QAAM,SAAS;AAAA,IACb,UAAU;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACP;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,EAAE,MAAM,QAAQ;AAAA,MAC5B;AAAA,MACA,EAAE,OAAO,MAAO,OAAO;AAAA,IACzB;AAAA,EACF;AACA,QAAM,cAAc,EAAE,UAAU;AAAA,IAC9B,EAAE,OAAO,MAAO,cAAc;AAAA,IAC9B,EAAE,OAAO,OAAQ,gBAAgB,QAAQ,gBAAgB,KAAK;AAAA,EAChE,EAAE;AACF,QAAM,OAAO;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,EACP;AACA,QAAM,OAAO;AAAA,IACX,gBAAgB;AAAA,IAChB,WAAW;AAAA,EACb;AACA,OAAK,WAAW;AAAA,IACd;AAAA,MACE,WAAW;AAAA,MACX,UAAU;AAAA,QACR;AAAA,UACE,OAAO;AAAA,UACP,WAAW;AAAA,QACb;AAAA,QACA,EAAE,OAAO,OAAO;AAAA,MAClB;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACA,OAAK,WAAW;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,MACR;AAAA,MACA,KAAK,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
