{
  "version": 3,
  "sources": ["../../highlight.js/es/languages/erlang-repl.js"],
  "sourcesContent": ["/*\nLanguage: Erlang REPL\nAuthor: Sergey Ignatov <sergey@ignatov.spb.su>\nWebsite: https://www.erlang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction erlangRepl(hljs) {\n  const regex = hljs.regex;\n  return {\n    name: 'Erlang REPL',\n    keywords: {\n      built_in:\n        'spawn spawn_link self',\n      keyword:\n        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if '\n        + 'let not of or orelse|10 query receive rem try when xor'\n    },\n    contains: [\n      {\n        className: 'meta.prompt',\n        begin: '^[0-9]+> ',\n        relevance: 10\n      },\n      hljs.COMMENT('%', '$'),\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n        relevance: 0\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      { begin: regex.concat(\n        /\\?(::)?/,\n        /([A-Z]\\w*)/, // at least one identifier\n        /((::)[A-Z]\\w*)*/ // perhaps more\n      ) },\n      { begin: '->' },\n      { begin: 'ok' },\n      { begin: '!' },\n      {\n        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n        relevance: 0\n      },\n      {\n        begin: '[A-Z][a-zA-Z0-9_\\']*',\n        relevance: 0\n      }\n    ]\n  };\n}\n\nexport { erlangRepl as default };\n"],
  "mappings": ";AAQA,SAAS,WAAW,MAAM;AACxB,QAAM,QAAQ,KAAK;AACnB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,UAAU;AAAA,MACR,UACE;AAAA,MACF,SACE;AAAA,IAEJ;AAAA,IACA,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA,MACb;AAAA,MACA,KAAK,QAAQ,KAAK,GAAG;AAAA,MACrB;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA,MACb;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,EAAE,OAAO,MAAM;AAAA,QACb;AAAA,QACA;AAAA;AAAA,QACA;AAAA;AAAA,MACF,EAAE;AAAA,MACF,EAAE,OAAO,KAAK;AAAA,MACd,EAAE,OAAO,KAAK;AAAA,MACd,EAAE,OAAO,IAAI;AAAA,MACb;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACb;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
