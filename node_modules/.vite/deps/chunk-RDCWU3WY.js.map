{
  "version": 3,
  "sources": ["../../highlight.js/es/languages/haxe.js"],
  "sourcesContent": ["/*\nLanguage: Haxe\nDescription: Haxe is an open source toolkit based on a modern, high level, strictly typed programming language.\nAuthor: Christopher Kaster <ikasoki@gmail.com> (Based on the actionscript.js language file by Alexander Myadzel)\nContributors: Kenton Hamaluik <kentonh@gmail.com>\nWebsite: https://haxe.org\n*/\n\nfunction haxe(hljs) {\n\n  const HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    name: 'Haxe',\n    aliases: [ 'hx' ],\n    keywords: {\n      keyword: 'break case cast catch continue default do dynamic else enum extern '\n               + 'for function here if import in inline never new override package private get set '\n               + 'public return static super switch this throw trace try typedef untyped using var while '\n               + HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      {\n        className: 'string', // interpolate-able strings\n        begin: '\\'',\n        end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst', // interpolation\n            begin: '\\\\$\\\\{',\n            end: '\\\\}'\n          },\n          {\n            className: 'subst', // interpolation\n            begin: '\\\\$',\n            end: /\\W\\}/\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta', // compiler meta\n        begin: '@:',\n        end: '$'\n      },\n      {\n        className: 'meta', // compiler conditionals\n        begin: '#',\n        end: '$',\n        keywords: { keyword: 'if else elseif end error' }\n      },\n      {\n        className: 'type', // function types\n        begin: ':[ \\t]*',\n        end: '[^A-Za-z0-9_ \\t\\\\->]',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'type', // types\n        begin: ':[ \\t]*',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'type', // instantiation\n        begin: 'new *',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'class', // enums\n        beginKeywords: 'enum',\n        end: '\\\\{',\n        contains: [ hljs.TITLE_MODE ]\n      },\n      {\n        className: 'class', // abstracts\n        beginKeywords: 'abstract',\n        end: '[\\\\{$]',\n        contains: [\n          {\n            className: 'type',\n            begin: '\\\\(',\n            end: '\\\\)',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: 'from +',\n            end: '\\\\W',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: 'to +',\n            end: '\\\\W',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: { keyword: 'abstract from to' }\n      },\n      {\n        className: 'class', // classes\n        begin: '\\\\b(class|interface) +',\n        end: '[\\\\{$]',\n        excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          {\n            className: 'keyword',\n            begin: '\\\\b(extends|implements) +',\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: '\\\\(',\n        excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [ hljs.TITLE_MODE ]\n      }\n    ],\n    illegal: /<\\//\n  };\n}\n\nexport { haxe as default };\n"],
  "mappings": ";AAQA,SAAS,KAAK,MAAM;AAElB,QAAM,mBAAmB;AAEzB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAE,IAAK;AAAA,IAChB,UAAU;AAAA,MACR,SAAS,gPAGE;AAAA,MACX,UACE;AAAA,MACF,SACE;AAAA,IACJ;AAAA,IACA,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR,KAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,UACP;AAAA,UACA;AAAA,YACE,WAAW;AAAA;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,UACP;AAAA,QACF;AAAA,MACF;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,QACE,WAAW;AAAA;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,MACP;AAAA,MACA;AAAA,QACE,WAAW;AAAA;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,EAAE,SAAS,2BAA2B;AAAA,MAClD;AAAA,MACA;AAAA,QACE,WAAW;AAAA;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,WAAW;AAAA,MACb;AAAA,MACA;AAAA,QACE,WAAW;AAAA;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,QACd,YAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,WAAW;AAAA;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,QACd,YAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,WAAW;AAAA;AAAA,QACX,eAAe;AAAA,QACf,KAAK;AAAA,QACL,UAAU,CAAE,KAAK,UAAW;AAAA,MAC9B;AAAA,MACA;AAAA,QACE,WAAW;AAAA;AAAA,QACX,eAAe;AAAA,QACf,KAAK;AAAA,QACL,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,YAAY;AAAA,UACd;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,YAAY;AAAA,UACd;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,YAAY;AAAA,UACd;AAAA,UACA,KAAK;AAAA,QACP;AAAA,QACA,UAAU,EAAE,SAAS,mBAAmB;AAAA,MAC1C;AAAA,MACA;AAAA,QACE,WAAW;AAAA;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,UAAU;AAAA,YACV,UAAU;AAAA,cACR;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO,KAAK;AAAA,gBACZ,WAAW;AAAA,cACb;AAAA,YACF;AAAA,UACF;AAAA,UACA,KAAK;AAAA,QACP;AAAA,MACF;AAAA,MACA;AAAA,QACE,WAAW;AAAA,QACX,eAAe;AAAA,QACf,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,UAAU,CAAE,KAAK,UAAW;AAAA,MAC9B;AAAA,IACF;AAAA,IACA,SAAS;AAAA,EACX;AACF;",
  "names": []
}
