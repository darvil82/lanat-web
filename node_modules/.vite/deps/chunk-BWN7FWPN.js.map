{
  "version": 3,
  "sources": ["../../highlight.js/es/languages/capnproto.js"],
  "sourcesContent": ["/*\nLanguage: Cap’n Proto\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Cap’n Proto message definition format\nWebsite: https://capnproto.org/capnp-tool.html\nCategory: protocols\n*/\n\n/** @type LanguageFn */\nfunction capnproto(hljs) {\n  const KEYWORDS = [\n    \"struct\",\n    \"enum\",\n    \"interface\",\n    \"union\",\n    \"group\",\n    \"import\",\n    \"using\",\n    \"const\",\n    \"annotation\",\n    \"extends\",\n    \"in\",\n    \"of\",\n    \"on\",\n    \"as\",\n    \"with\",\n    \"from\",\n    \"fixed\"\n  ];\n  const TYPES = [\n    \"Void\",\n    \"Bool\",\n    \"Int8\",\n    \"Int16\",\n    \"Int32\",\n    \"Int64\",\n    \"UInt8\",\n    \"UInt16\",\n    \"UInt32\",\n    \"UInt64\",\n    \"Float32\",\n    \"Float64\",\n    \"Text\",\n    \"Data\",\n    \"AnyPointer\",\n    \"AnyStruct\",\n    \"Capability\",\n    \"List\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n  const CLASS_DEFINITION = {\n    variants: [\n      { match: [\n        /(struct|enum|interface)/,\n        /\\s+/,\n        hljs.IDENT_RE\n      ] },\n      { match: [\n        /extends/,\n        /\\s*\\(/,\n        hljs.IDENT_RE,\n        /\\s*\\)/\n      ] }\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.class\"\n    }\n  };\n  return {\n    name: 'Cap’n Proto',\n    aliases: [ 'capnp' ],\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: LITERALS\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: /@0x[\\w\\d]{16};/,\n        illegal: /\\n/\n      },\n      {\n        className: 'symbol',\n        begin: /@\\d+\\b/\n      },\n      CLASS_DEFINITION\n    ]\n  };\n}\n\nexport { capnproto as default };\n"],
  "mappings": ";AASA,SAAS,UAAU,MAAM;AACvB,QAAM,WAAW;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,QAAQ;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,WAAW;AAAA,IACf;AAAA,IACA;AAAA,EACF;AACA,QAAM,mBAAmB;AAAA,IACvB,UAAU;AAAA,MACR,EAAE,OAAO;AAAA,QACP;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACP,EAAE;AAAA,MACF,EAAE,OAAO;AAAA,QACP;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL;AAAA,MACF,EAAE;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACL,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAE,OAAQ;AAAA,IACnB,UAAU;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,UAAU;AAAA,MACR,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
